Задание 1. *Представьте, что вы работаете над разработкой простого приложения для записной книжки, которое позволяет пользователям добавлять, редактировать и удалять контакты.
Ваша задача - придумать как можно больше различных тестов (юнит-тесты, интеграционные тесты, сквозные тесты) для этого приложения. Напишите название каждого теста, его тип и краткое описание того, что этот тест проверяет.

Решение:

1. Тест "Добавить контакт" - проверяет корректность работы функции добавления нового контакта в базу данных. (юнит тест)

2. Тест "Редактировать контакт" - проверяет корректность редактирования существующего контакта. (юнит тест)

3. Тест "Удалить контакт" - проверяет возможность удаления контакта из базы данных. (юнит тест)

4. Тест "Получить все контакты" - тестирует, корректно ли приложение возвращает все контакты из базы данных. (интеграционный тест)

5. Тест "Найти контакт по введенной строке" - ищет контакт в базе данных по заданному запросу и проверяет, возвращает ли приложение корректный результат. (сквозной тест)

6. Тест на "Валидацию полей" - гарантирует, что все обязательные поля при добавлении или редактировании контакта заполнены. (юнит тест)

7. Тест на "Уникальность имени контакта" - проверка, что в базе данных нет двух контактов с одинаковым именем. (юнит тест)

8. Тест "Восстановить удаленный контакт" - восстанавливает удаленный контакт из базы данных и проверяет его корректное отображение. (интеграционный тест)

-----------------------------
*Задание 2. *Ниже список тестовых сценариев. Ваша задача - определить тип каждого теста (юнит-тест, интеграционный тест, сквозной тест) и объяснить, почему вы так решили.

""Проверка того, что функция addContact корректно добавляет новый контакт в список контактов"".

""Проверка того, что при добавлении контакта через пользовательский интерфейс, контакт корректно отображается в списке контактов"".

""Проверка полного цикла работы с контактом: создание контакта, его редактирование и последующее удаление"".

Решение:

1. Проверка того, что функция addContact корректно добавляет новый контакт в список контактов" - это юнит-тест. Он проверяет конкретную функциональность - добавление контакта - и включает в себя все необходимые проверки, чтобы убедиться, что функция работает правильно.

2. "Проверка того, что при добавлении контакта через пользовательский интерфейс, контакт корректно отображается в списке контактов" - это интеграционный тест. Этот тест проверяет, как различные части системы взаимодействуют друг с другом, в данном случае, между пользовательским интерфейсом и внутренним функционалом приложения.

3. "Проверка полного цикла работы с контактом: создание контакта, его редактирование и последующее удаление" – это сквозной тест. Он охватывает все этапы работы с контактом и проверяет, что каждый из них выполняется корректно.

